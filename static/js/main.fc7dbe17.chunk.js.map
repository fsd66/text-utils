{"version":3,"sources":["components/Header.js","components/UtilSelector.js","components/RandomCapitalizer.js","components/DiscordBlockTextifyer.js","TextUtilsApp.js","reportWebVitals.js","index.js"],"names":["Header","className","React","Component","UtilSelector","props","state","active","defaultActive","setSelectedTab","bind","tabIndex","event","preventDefault","this","setState","tabSelectedCallback","tabList","tabs","map","t","i","buttonClassNames","push","join","onClick","e","title","id","defaultProps","selectedIndex","console","log","RandomCapitalizer","outputText","onChangeEvent","text","Capitalizer","randomize","inputPlaceholderText","outputPlaceholderText","placeholder","onChange","target","value","rows","textAreaRows","readOnly","DiscordBlockTextifyer","Discord","BlockTextifyer","blockTextify","TextUtilsApp","currentUtil","defaultUtil","utilsHtml","utilities","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc7dbe17.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar\">\r\n                <div className=\"navbar-brand\">\r\n                    <h1 className=\"title\">Text-Utils</h1>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class UtilSelector extends React.Component {\r\n    static defaultProps = {\r\n        tabs: [\r\n            {\r\n                title: \"Random Capitalizer\",\r\n                id: \"random-capitalizer\"\r\n            },\r\n            {\r\n                title: \"Discord Block Textify\",\r\n                id: \"discord-block-texify\"\r\n            }\r\n        ],\r\n        defaultActive: 0,\r\n        tabSelectedCallback: (selectedIndex) => console.log(`Selected Tab: ${selectedIndex}`)\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: this.props.defaultActive\r\n        };\r\n\r\n        this.setSelectedTab = this.setSelectedTab.bind(this);\r\n    }\r\n\r\n    setSelectedTab(tabIndex, event) {\r\n        event.preventDefault();\r\n        this.setState({ active: tabIndex });\r\n        this.props.tabSelectedCallback(tabIndex);\r\n    }\r\n\r\n    render() {\r\n        const tabList = this.props.tabs.map((t, i) => {\r\n            const buttonClassNames = [\"button\"];\r\n            buttonClassNames.push(this.state.active === i ? \"is-link\" : \"is-white\");\r\n\r\n            return (\r\n                <li key={`util-selector-tab-${t.id}-${i}`}>\r\n                    <button className={buttonClassNames.join(\" \")} onClick={e => this.setSelectedTab(i, e)}>{`${t.title}`}</button>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"tabs\">\r\n                <ul>\r\n                    {tabList}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Capitalizer } from \"text-rand-utils\";\r\n\r\nexport default class RandomCapitalizer extends React.Component {\r\n    static defaultProps = {\r\n        textAreaRows: 10\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            outputText: \"\"\r\n        }\r\n\r\n        this.onChangeEvent = this.onChangeEvent.bind(this);\r\n    }\r\n\r\n    onChangeEvent(text, event) {\r\n        this.setState({ outputText: Capitalizer.randomize(text)});\r\n    }\r\n\r\n    render() {\r\n        const inputPlaceholderText = `Input your text to ${Capitalizer.randomize(\"randomly capitalize\")} here.`;\r\n        const outputPlaceholderText = `${Capitalizer.randomize(\"output\")}`;\r\n\r\n        return (\r\n            <div className=\"columns\">\r\n                <div className=\"column\">\r\n                    <textarea className=\"textarea has-fixed-size\" placeholder={inputPlaceholderText} onChange={e => this.onChangeEvent(e.target.value, e)} rows={this.props.textAreaRows}></textarea>\r\n                </div>\r\n\r\n                <div className=\"column\">\r\n                    <textarea className=\"textarea has-fixed-size\" readOnly={true} placeholder={outputPlaceholderText} value={this.state.outputText} rows={this.props.textAreaRows}></textarea>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Discord } from \"text-rand-utils\";\r\n\r\nexport default class DiscordBlockTextifyer extends React.Component {\r\n    static defaultProps = {\r\n        textAreaRows: 10\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            outputText: \"\"\r\n        }\r\n\r\n        this.onChangeEvent = this.onChangeEvent.bind(this);\r\n    }\r\n\r\n    onChangeEvent(text, event) {\r\n        this.setState({ outputText: Discord.BlockTextifyer.blockTextify(text)});\r\n    }\r\n\r\n    render() {\r\n        const inputPlaceholderText = `Changes B to ðŸ…±`;\r\n        const outputPlaceholderText = `Copy and Paste output to Discord`;\r\n\r\n        return (\r\n            <div className=\"columns\">\r\n                <div className=\"column\">\r\n                    <textarea className=\"textarea has-fixed-size\" placeholder={inputPlaceholderText} onChange={e => this.onChangeEvent(e.target.value, e)} rows={this.props.textAreaRows}></textarea>\r\n                </div>\r\n\r\n                <div className=\"column\">\r\n                    <textarea className=\"textarea has-fixed-size\" readOnly={true} placeholder={outputPlaceholderText} value={this.state.outputText} rows={this.props.textAreaRows}></textarea>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\nimport './custom.scss';\n\nimport Header from \"./components/Header\";\nimport UtilSelector from \"./components/UtilSelector\";\nimport RandomCapitalizer from \"./components/RandomCapitalizer\";\nimport DiscordBlockTextifyer from \"./components/DiscordBlockTextifyer\";\n\nexport default class TextUtilsApp extends React.Component {\n  static defaultProps = {\n    utilities: [\n      <RandomCapitalizer />,\n      <DiscordBlockTextifyer />\n    ],\n    defaultUtil: 0\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentUtil: this.props.defaultUtil\n    }\n  }\n\n  render() {\n    const utilsHtml = this.props.utilities?.[this.state.currentUtil] || (<div>Unable to load utility</div>);\n\n    return (\n      <div className=\"App container\">\n        <Header />\n        <UtilSelector tabSelectedCallback={selectedIndex => this.setState({ currentUtil: selectedIndex })} />\n        {utilsHtml}\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TextUtilsApp from './TextUtilsApp';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TextUtilsApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}