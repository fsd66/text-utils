{"version":3,"sources":["components/Header.js","components/UtilSelector.js","components/TextTransformer.js","components/RandomCapitalizer.js","components/DiscordBlockTextifyer.js","components/TextAestheticizer.js","components/EmbeddedVideoRandomizer.js","components/TextPekofyer.js","components/TextReversifyer.js","TextUtilsApp.js","reportWebVitals.js","index.js"],"names":["Header","className","React","Component","UtilSelector","props","state","active","defaultActive","setSelectedTab","bind","tabIndex","event","preventDefault","this","setState","tabSelectedCallback","tabList","tabs","map","t","i","buttonClassNames","push","join","onClick","e","title","id","defaultProps","selectedIndex","console","log","TextTransformer","onChangeEvent","text","inputPlaceholderText","outputPlaceholderText","placeholder","onChange","target","value","rows","textAreaRows","readOnly","outputText","RandomCapitalizer","Capitalizer","randomize","DiscordBlockTextifyer","Discord","BlockTextifyer","blockTextify","TextAestheticizer","Aestheticizer","aestheticize","EmbeddedVideoRandomizer","selectedVideo","videos","Math","floor","random","length","Fragment","width","videoSize","height","src","frameBorder","allow","allowFullScreen","TextPekofyer","Pekofyer","pekofy","peko","TextReversifyer","Reversifyer","reversify","example","TextUtilsApp","currentUtil","defaultUtil","utilsHtml","utilities","html","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78d86efd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar\">\r\n                <div className=\"navbar-brand\">\r\n                    <h1 className=\"title\">Text-Utils</h1>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class UtilSelector extends React.Component {\r\n    static defaultProps = {\r\n        tabs: [\r\n            {\r\n                title: \"Random Capitalizer\",\r\n                id: \"random-capitalizer\"\r\n            },\r\n            {\r\n                title: \"Discord Block Textify\",\r\n                id: \"discord-block-texify\"\r\n            }\r\n        ],\r\n        defaultActive: 0,\r\n        tabSelectedCallback: (selectedIndex) => console.log(`Selected Tab: ${selectedIndex}`)\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: this.props.defaultActive\r\n        };\r\n\r\n        this.setSelectedTab = this.setSelectedTab.bind(this);\r\n    }\r\n\r\n    setSelectedTab(tabIndex, event) {\r\n        event.preventDefault();\r\n        this.setState({ active: tabIndex });\r\n        this.props.tabSelectedCallback(tabIndex);\r\n    }\r\n\r\n    render() {\r\n        const tabList = this.props.tabs.map((t, i) => {\r\n            const buttonClassNames = [\"button\"];\r\n            buttonClassNames.push(this.state.active === i ? \"is-link\" : \"is-light\");\r\n\r\n            return (\r\n                <li key={`util-selector-tab-${t.id}-${i}`}>\r\n                    <button className={buttonClassNames.join(\" \")} onClick={e => this.setSelectedTab(i, e)}>{`${t.title}`}</button>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"tabs\">\r\n                <ul>\r\n                    {tabList}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class TextTransformer extends React.Component {\r\n    static defaultProps = {\r\n        inputPlaceholderText: \"Input:\",\r\n        outputPlaceholderText: \"Output:\",\r\n        textAreaRows: 10,\r\n        onChangeEvent: (text, event) => {},\r\n        outputText: \"\"\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeEvent = this.onChangeEvent.bind(this);\r\n    }\r\n\r\n    onChangeEvent(text, event) {\r\n        this.props.onChangeEvent(text, event);\r\n    }\r\n\r\n    render() {\r\n        const inputPlaceholderText = this.props.inputPlaceholderText;\r\n        const outputPlaceholderText = this.props.outputPlaceholderText;\r\n\r\n        return (\r\n            <div className=\"columns\">\r\n                <div className=\"column\">\r\n                    <textarea className=\"textarea has-fixed-size\" placeholder={inputPlaceholderText} onChange={e => this.onChangeEvent(e.target.value, e)} rows={this.props.textAreaRows}></textarea>\r\n                </div>\r\n\r\n                <div className=\"column\">\r\n                    <textarea className=\"textarea has-fixed-size\" readOnly={true} placeholder={outputPlaceholderText} value={this.props.outputText} rows={this.props.textAreaRows}></textarea>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Capitalizer } from \"text-rand-utils\";\r\n\r\nimport TextTransformer from \"./TextTransformer\";\r\n\r\nexport default class RandomCapitalizer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            outputText: \"\"\r\n        }\r\n\r\n        this.onChangeEvent = this.onChangeEvent.bind(this);\r\n    }\r\n\r\n    onChangeEvent(text, event) {\r\n        this.setState({ outputText: Capitalizer.randomize(text)});\r\n    }\r\n\r\n    render() {\r\n        const inputPlaceholderText = `Input your text to ${Capitalizer.randomize(\"randomly capitalize\")} here.`;\r\n        const outputPlaceholderText = `${Capitalizer.randomize(\"output\")}`;\r\n\r\n        return <TextTransformer inputPlaceholderText={inputPlaceholderText} outputPlaceholderText={outputPlaceholderText} onChangeEvent={this.onChangeEvent} outputText={this.state.outputText} />;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Discord } from \"text-rand-utils\";\r\n\r\nimport TextTransformer from \"./TextTransformer\";\r\n\r\nexport default class DiscordBlockTextifyer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            outputText: \"\"\r\n        }\r\n\r\n        this.onChangeEvent = this.onChangeEvent.bind(this);\r\n    }\r\n\r\n    onChangeEvent(text, event) {\r\n        this.setState({ outputText: Discord.BlockTextifyer.blockTextify(text)});\r\n    }\r\n\r\n    render() {\r\n        const inputPlaceholderText = `Changes B to 🅱`;\r\n        const outputPlaceholderText = `Copy and Paste output to Discord`;\r\n\r\n        return <TextTransformer inputPlaceholderText={inputPlaceholderText} outputPlaceholderText={outputPlaceholderText} onChangeEvent={this.onChangeEvent} outputText={this.state.outputText} />;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Aestheticizer } from \"text-rand-utils\";\r\n\r\nimport TextTransformer from \"./TextTransformer\";\r\n\r\nexport default class TextAestheticizer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            outputText: \"\"\r\n        };\r\n\r\n        this.onChangeEvent = this.onChangeEvent.bind(this);\r\n    }\r\n\r\n    onChangeEvent(text, event) {\r\n        this.setState({ outputText: Aestheticizer.aestheticize(text) });\r\n    }\r\n\r\n    render() {\r\n\r\n        return <TextTransformer inputPlaceholderText={`Input text to ${Aestheticizer.aestheticize(\"aestheticize\")}`} outputPlaceholderText={Aestheticizer.aestheticize(\"Aestheticized output\")} onChangeEvent={this.onChangeEvent} outputText={this.state.outputText} />\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class EmbeddedVideoRandomizer extends React.Component {\r\n    static defaultProps = {\r\n        videoSize: { width: 560, height: 315 },\r\n        allow: [\r\n            \"accelerometer\",\r\n            \"autoplay\",\r\n            \"clipboard-write\",\r\n            \"clipboard-write\",\r\n            \"encrypted-media\",\r\n            \"gyroscope\",\r\n            \"picture-in-picture\"\r\n        ],\r\n        videos: [\r\n            {\r\n                src: \"https://www.youtube.com/embed/uRB1G0cKpIk\",\r\n                title: \"peko-miko-song\"\r\n            },\r\n            {\r\n                src: \"https://www.youtube.com/embed/_KTwDH_KQ_g\",\r\n                title: \"peko-random-brain-song\"\r\n            },\r\n            {\r\n                src: \"https://www.youtube.com/embed/AAr2lHZLNyU\",\r\n                title: \"discommunication-alien-pekover-song\"\r\n            }\r\n        ]\r\n    }\r\n    render() {\r\n        const selectedVideo = this.props.videos[Math.floor(Math.random() * this.props.videos.length)];\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <iframe title={selectedVideo.title} width={this.props.videoSize.width} height={this.props.videoSize.height} src={selectedVideo.src} frameBorder=\"0\" allow={this.props.allow.join(\"; \")} allowFullScreen></iframe>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Pekofyer } from \"text-rand-utils\";\r\n\r\nimport TextTransformer from \"./TextTransformer\";\r\nimport EmbeddedVideoRandomizer from \"./EmbeddedVideoRandomizer\";\r\n\r\nexport default class TextPekofyer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            outputText: \"\"\r\n        };\r\n\r\n        this.onChangeEvent = this.onChangeEvent.bind(this);\r\n    }\r\n\r\n    onChangeEvent(text, event) {\r\n        this.setState({ outputText: text ? Pekofyer.pekofy(text) : \"\" });\r\n    }\r\n\r\n    render() {\r\n        const peko = `peko peko peko peko peko peko peko peko peko peko peko peko peko peko peko peko`;\r\n        return (\r\n            <div>\r\n                <TextTransformer inputPlaceholderText={peko} outputPlaceholderText={Pekofyer.pekofy(peko)} onChangeEvent={this.onChangeEvent} outputText={this.state.outputText} />\r\n\r\n                <div className=\"level\">\r\n                    <div className=\"level-item\">\r\n                        <EmbeddedVideoRandomizer />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Reversifyer } from \"text-rand-utils\";\r\n\r\nimport TextTransformer from \"./TextTransformer\";\r\n\r\nexport default class TextReversifyer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            outputText: \"\"\r\n        };\r\n\r\n        this.onChangeEvent = this.onChangeEvent.bind(this);\r\n    }\r\n\r\n    onChangeEvent(text, event) {\r\n        this.setState({ outputText: text ? Reversifyer.reversify(text) : \"\" });\r\n    }\r\n\r\n    render() {\r\n        const example = \"Insert text to reverse here.\";\r\n        return <TextTransformer inputPlaceholderText={example} outputPlaceholderText={Reversifyer.reversify(example)} onChangeEvent={this.onChangeEvent} outputText={this.state.outputText} />\r\n    }\r\n}\r\n","import React from \"react\";\nimport './custom.scss';\n\nimport Header from \"./components/Header\";\nimport UtilSelector from \"./components/UtilSelector\";\nimport RandomCapitalizer from \"./components/RandomCapitalizer\";\nimport DiscordBlockTextifyer from \"./components/DiscordBlockTextifyer\";\nimport TextAestheticizer from \"./components/TextAestheticizer\";\nimport TextPekofyer from \"./components/TextPekofyer\";\nimport TextReversifyer from \"./components/TextReversifyer\";\n\nexport default class TextUtilsApp extends React.Component {\n  static defaultProps = {\n    utilities: [\n      {\n        html: <RandomCapitalizer />,\n        title: \"Random Captializer\",\n        id: \"random-capitalizer\"\n      },\n      {\n        html: <DiscordBlockTextifyer />,\n        title: \"Discord Block Textifyer\",\n        id: \"discord-block-textifyer\"\n      },\n      {\n        html: <TextAestheticizer />,\n        title: \"Aestheticizer\",\n        id: \"text-aestheticizer\"\n      },\n      {\n        html: <TextReversifyer />,\n        title: \"Reversifyer\",\n        id: \"text-reversifyer\"\n      },\n      {\n        html: <TextPekofyer />,\n        title: \"ぺーこぺこぺこ！！！\",\n        id: \"pekofyer\"\n      }\n    ],\n    defaultUtil: 0\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentUtil: this.props.defaultUtil\n    }\n  }\n\n  render() {\n    const utilsHtml = this.props.utilities?.[this.state.currentUtil]?.html || (<div>Unable to load utility</div>);\n\n    return (\n      <div className=\"App container\">\n        <Header />\n        <UtilSelector tabs={this.props.utilities} tabSelectedCallback={selectedIndex => this.setState({ currentUtil: selectedIndex })} />\n        {utilsHtml}\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TextUtilsApp from './TextUtilsApp';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TextUtilsApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}